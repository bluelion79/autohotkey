<scheme const="RUST">
    <theme name="Default">
        <style name="Default" v="0" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="CommentBlock" v="1" fc="0x767676" bc="" b="0" i="1" u="" />
        <style name="CommentLine" v="2" fc="0x767676" bc="" b="0" i="1" u="" />
        <style name="CommentBlockDoc" v="3" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="CommentLineDoc" v="4" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="Number" v="5" fc="0x880088" bc="" b="0" i="0" u="" />
        <style name="Word" v="6" fc="0x004CB1" bc="" b="1" i="0" u="" />
        <style name="Word2" v="7" fc="0x0070A0" bc="" b="0" i="0" u="" />
        <style name="Word3" v="8" fc="0x004CB1" bc="" b="0" i="0" u="" />
        <style name="Word4" v="9" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="Word5" v="10" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="Word6" v="11" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="Word7" v="12" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="String" v="13" fc="0x008000" bc="" b="0" i="0" u="" />
        <style name="Stringr" v="14" fc="0x008000" bc="" b="0" i="0" u="" />
        <style name="Character" v="15" fc="0x008000" bc="" b="0" i="0" u="" />
        <style name="Operator" v="16" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="Identifier" v="17" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="Lifetime" v="18" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="Macro" v="19" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="LexError" v="20" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="ByteString" v="21" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="ByteStringr" v="22" fc="0x000000" bc="" b="0" i="0" u="" />
        <style name="ByteCharacter" v="23" fc="0x000000" bc="" b="0" i="0" u="" />
    </theme>

    <keywords>
        <language id="RS">
            <group id="0" name="Primary Keywords" keywords="abstract alignof as async await become box break const continue crate do dyn else enum extern false final for if impl in loop macro macro_rules main match mod move override priv proc pub pure ref return self sizeof struct super trait true try type typeof union unsafe unsized use virtual where while yield" />

            <group id="1" name="Built-in Types" keywords="bool char f32 f64 i16 i32 i64 i8 int isize str u16 u32 u64 u8 uint usize" />

            <group id="2" name="Other Keywords" keywords="fn let mut static" />
        </language>
    </keywords>
</scheme>
