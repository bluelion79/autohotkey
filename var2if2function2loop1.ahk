; 변수 2개 선언
num1 := 5
num2 := 6

if (num1 <= 0) ; num1이 0보다 작거나 같은 경우
{
  MsgBox, % "숫자 1이 0보다 작거나 같습니다."
}
else if (num2 <= 0) ; num2가 0보다 작거나 같은 경우
{
  MsgBox, % "숫자 2가 0보다 작거나 같습니다."
}
else ; 두 변수가 모두 0보다 크면
{
  ; 사용자 정의 함수를 이용하여 두 숫자를 더함
  sum := add(num1, num2)

  ; loop 구문 사용
  Loop, % sum
  {
    ; 아무것도 하지 않음
  }

  ; 결과값 출력
  printResult(sum)
}

; 사용자 정의 함수 1: 두 개의 숫자를 더함
add(num1, num2)
{
  return num1 + num2
}

; 사용자 정의 함수 2: 결과값을 출력함
printResult(sum)
{
  MsgBox, % "두 수의 합은 " . sum . "입니다."
}

첫 번째 줄부터 시작해서, 이 코드는 AHK라는 프로그래밍 언어를 이용해 두 숫자를 더하고, 그 결과값을 출력하는 것을 알려줍니다.

코드를 이해하기 위해서는 두 가지의 중요한 개념을 이해해야 해요. 그것은 변수와 함수입니다.

먼저, 변수란 컴퓨터가 값을 저장해 둘 수 있는 용기라고 생각하시면 됩니다. 변수에 다양한 값을 넣을 수 있어요. 이번 코드에서는 num1과 num2라는 두 변수를 선언해두고, 각각에 5와 6을 할당했습니다.

그 다음에는 함수입니다. 함수란 일종의 묶음, 혹은 패키지라고 생각하시면 됩니다. 사용자가 필요한 작업을 하나로 묶어둔 것이죠. 이번 코드에서는 AddNum 이라는 함수와 PrintResult라는 함수를 만들어두었습니다.

AddNum 함수는 두 개의 숫자를 더하는 것을 목적으로 만들어졌습니다. PrintResult라는 함수는 두 수의 합을 출력하기 위함입니다. 어떤 값을 전달하느냐에 따라 그 결과가 달라져요. 함수를 이용하면, 반복적인 작업을 편리하게 수행할 수 있습니다.

이제 코드를 따라가보면, 먼저 if 구문이 나와요. 이 구문은 만약 num1과 num2가 모두 0보다 크면, 두 수의 합을 계산하고 결과값을 출력합니다. 만약 그렇지 않고 num1이 0보다 작거나 같으면 "숫자 1이 0보다 작거나 같습니다"를 출력하고, num2가 0보다 작거나 같으면 "숫자 2가 0보다 작거나 같습니다"를 출력합니다.

Loop 구문은 반복문이라고 생각하시면 됩니다. 이번 코드에서는 더한 두 수의 합 만큼 반복(repeat)하게 됩니다. 예를 들어, num1이 2이고 num2가 3이라면, 5번을 반복할 거예요.

마지막으로, 코드 하단에는 두 개의 함수가 정의되어 있는 것이 보입니다. PrintResult 함수는 결과값을 출력하는 함수입니다. 출력하고 싶은 값을 전달하면, 해당 값을 활용하여 값을 띄우게 됩니다. AddNum 함수는 두 개의 값(여기서는 변수)을 받아서, 두 개의 값을 더한 값을 리턴하는 함수입니다.
